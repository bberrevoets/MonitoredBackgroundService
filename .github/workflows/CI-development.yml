name: Build and Publish Preview NuGet Package

on:
  push:
    branches:
      - Development
  pull_request:
    branches:
      - Development

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Extract version from .csproj and append -preview
      id: extract-version
      shell: bash
      run: |
        VERSION=$(sed -n 's:.*<Version>\(.*\)</Version>.*:\1:p' Berrevoets.MonitoredBackgroundService/Berrevoets.MonitoredBackgroundService.csproj)
        if [ -z "$VERSION" ]; then
          echo "Error: Version could not be extracted."
          exit 1
        fi
        VERSION="$VERSION-preview"
        echo "Version extracted: $VERSION"
        echo "version=$VERSION" >> $GITHUB_ENV

    - name: Build the solution (Release)
      run: dotnet build Berrevoets.MonitoredBackgroundService/Berrevoets.MonitoredBackgroundService.csproj --configuration Release

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

  publish:
    needs: build
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Use extracted version from build job
      run: |
        echo "VERSION=${{ needs.build.outputs.version }}" >> $GITHUB_ENV
        echo "VERSION=${{ needs.build.outputs.version }}"

    - name: Build the solution (Release) again for packaging
      run: dotnet build Berrevoets.MonitoredBackgroundService/Berrevoets.MonitoredBackgroundService.csproj --configuration Release

    - name: Pack Preview NuGet package (with symbols)
      run: |
        echo "Packing NuGet package with version: $VERSION"
        dotnet pack Berrevoets.MonitoredBackgroundService/Berrevoets.MonitoredBackgroundService.csproj --configuration Release --output "./output" /p:PackageVersion=$VERSION /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg

    - name: Publish Preview NuGet package
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push "./output/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Publish Symbol Package (.snupkg)
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push "./output/*.snupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
